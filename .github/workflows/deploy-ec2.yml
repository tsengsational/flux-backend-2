name: WordPress EC2 Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: tsengsational/flux-backend-2
      
      - name: Set write permissions
        run: chmod -R u+w wordpress/wp-content

      - name: Validate docker compose.yml
        run: docker compose config

      - name: Test WordPress container
        run: |
          docker compose up -d
          docker compose ps
          docker compose logs wordpress

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: tsengsational/flux-backend-2

      - name: Ensure directory permissions before cleanup
        run: |
          sudo chmod -R u+w wordpress/wp-content
          sudo chown -R $USER:$USER wordpress/wp-content

      - name: Clean up directories
        run: |
          sudo rm -rf wordpress/wp-content/themes/*
          sudo rm -rf wordpress/wp-content/uploads/*

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          # known_hosts: ${{ secrets.EC2_SSH_KNOWN_HOSTS }}
      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} 'echo "SSH connected!"'

      - name: Deploy to EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} '
            cd /home/ubuntu/flux-theatre-backend &&
            sudo chmod -R u+w wordpress/wp-content &&
            sudo chown -R ubuntu:ubuntu wordpress/wp-content &&
            git fetch origin &&
            git reset --hard origin/main &&
            docker compose down &&
            docker compose pull &&
            docker compose up -d --build &&
            docker compose ps &&
            docker compose logs wordpress
          '

      - name: Verify HTTP Deployment
        run: |
          curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.EC2_HOST }}:8000/wp-json/wp/v2/posts || true
        continue-on-error: true

      - name: Verify HTTPS Deployment
        run: |
          curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.ALB_DNS_NAME }}/wp-json/wp/v2/posts || true
        continue-on-error: true

      - name: Notify on Failure
        if: failure() && github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'EC2 Deployment Failed',
              body: 'The deployment to EC2 instance failed. Please check the logs.'
            }) 